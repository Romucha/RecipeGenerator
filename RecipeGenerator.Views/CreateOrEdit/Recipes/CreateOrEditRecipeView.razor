<EditForm Model="@ViewModel" OnSubmit="ViewModel.CreateAsync">
    <DataAnnotationsValidator />
    <div style="display: flex; flex-direction: column">
        <div>
            @nameof(ViewModel.Name)
            <InputText @bind-Value="@ViewModel.Name"/>
        </div>
        <div>
            @nameof(ViewModel.Description)
            <InputText @bind-Value="@ViewModel.Description"/>
        </div>
        <div>
            @nameof(ViewModel.Portions)
            <InputNumber @bind-Value="@ViewModel.Portions"/>
        </div>
        <div>
            @nameof(ViewModel.EstimatedTime)
            <InputNumber @bind-Value="@ViewModel.EstimatedTime"/>
        </div>
        <div>
            @nameof(ViewModel.CourseType)
            <InputSelect @bind-Value="@ViewModel.CourseType">
                @foreach (var c in Enum.GetValues(typeof(RecipeGenerator.Models.Recipes.Course)))
                {
                    <option value="@c">@c</option>
                }
            </InputSelect>
        </div>
        <div style="display: flex; flex-direction: column">
            <div>
                <div class="btn-primary" onclick="@(async () => { await ViewModel.TakeRecipePhotoAsync(); })">Take photo</div>
            </div>
            <div>
                <div class="btn-primary" onclick="@(async () => { await ViewModel.SelectRecipePhotoAsync(); })">Select photo</div>
            </div>
            <div>
                <img src="@($"data:image/gif;base64,{ViewModel.Image}")" alt="@ViewModel.Name" />
            </div>
        </div>
        <div style="display: flex; flex-direction: column">
            <div>Ingredients</div>
            <div class="btn-primary" onclick="@ViewModel.AddAppliedIngredientAsync">Add ingredient</div>
            <InputSelect @bind-Value="@ViewModel.SelectedIngredientId">
                <option value="">
                    Select ingredient...
                </option>
                @foreach (var ingredient in ViewModel.ApplicableIngredients)
                {
                    <option value="@ingredient.Id">@ingredient.Name</option>
                }
            </InputSelect>
        </div>
        <div>Selected ingredients</div>
        <div>
            @foreach (var appliedIngredient in ViewModel.AppliedIngredients)
            {
                <div style="margin: 5px; outline: solid 5px;">
                    <div>@appliedIngredient.Name</div>
                    <div class="btn-secondary" onclick="@(async () => { await ViewModel.DeleteAppliedIngredientAsync(appliedIngredient.Id); })">Delete ingredient</div>
                </div>
            }
        </div>
        <div style="display: flex; flex-direction: column">
            <div class="btn-primary" onclick="@ViewModel.AddStepAsync">Add step</div>
            @foreach (var s in ViewModel.Steps)
            {
                <div style="display:flex; flex-direction:column">
                    <div>Index: @s.Index</div>
                    <div>
                        @nameof(s.Name)
                        <InputText @bind-Value="@s.Name"/>
                    </div>
                    <div>
                        @nameof(s.Description)
                        <InputText @bind-Value="@s.Description"/>
                    </div>
                    <div class="btn-primary" onclick="@(async () => { await ViewModel.DeleteStepAsync(s.Id); })">Delete step</div>
                </div>
                <div style="display: flex; flex-direction: column">
                    <div>
                        <div class="btn-primary" onclick="@(async () => { await ViewModel.TakeStepPhotoAsync(s.Id); })">Take photo</div>
                    </div>
                    <div>
                        <div class="btn-primary" onclick="@(async () => { await ViewModel.SelectStepPhotoAsync(s.Id); })">Select photo</div>
                    </div>
                    @foreach (var photo in s.Photos)
                    {
                        <div>
                            <img src="@($"data:image/gif;base64,{photo}")" alt="@s.Name" />
                        </div>
                    }
                </div>
            }
        </div>
    </div>
    <button type="submit">Save</button>
    <button type="reset">Cancel</button>
</EditForm>
